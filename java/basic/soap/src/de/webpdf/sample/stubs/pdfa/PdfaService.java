
package de.webpdf.sample.stubs.pdfa;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PdfaService", targetNamespace = "http://schema.webpdf.de/1.0/soap/pdfa", wsdlLocation = "http://localhost:8080/webPDF/soap/pdfa?wsdl")
public class PdfaService
    extends Service
{

    private final static URL PDFASERVICE_WSDL_LOCATION;
    private final static WebServiceException PDFASERVICE_EXCEPTION;
    private final static QName PDFASERVICE_QNAME = new QName("http://schema.webpdf.de/1.0/soap/pdfa", "PdfaService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/webPDF/soap/pdfa?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PDFASERVICE_WSDL_LOCATION = url;
        PDFASERVICE_EXCEPTION = e;
    }

    public PdfaService() {
        super(__getWsdlLocation(), PDFASERVICE_QNAME);
    }

    public PdfaService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PDFASERVICE_QNAME, features);
    }

    public PdfaService(URL wsdlLocation) {
        super(wsdlLocation, PDFASERVICE_QNAME);
    }

    public PdfaService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PDFASERVICE_QNAME, features);
    }

    public PdfaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PdfaService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Pdfa
     */
    @WebEndpoint(name = "PdfaPort")
    public Pdfa getPdfaPort() {
        return super.getPort(new QName("http://schema.webpdf.de/1.0/soap/pdfa", "PdfaPort"), Pdfa.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Pdfa
     */
    @WebEndpoint(name = "PdfaPort")
    public Pdfa getPdfaPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://schema.webpdf.de/1.0/soap/pdfa", "PdfaPort"), Pdfa.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PDFASERVICE_EXCEPTION!= null) {
            throw PDFASERVICE_EXCEPTION;
        }
        return PDFASERVICE_WSDL_LOCATION;
    }

}
